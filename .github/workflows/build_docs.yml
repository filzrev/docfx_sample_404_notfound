name: Build document and deploy to GitHub Page

on:
  push:
    branches: ["main"]
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false
  
defaults:
  run:
    shell: pwsh
jobs:
  # Build Document Job
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./docs
    steps:
      # Checkout
      - name: Checkout
        uses: actions/checkout@v4
      # Install docfx as .NET global tools
      - name: Install docfx
        run: |
          dotnet tool install docfx -g
      # Run `docfx metadata` command
      - name: Generate metadata
        run: |
          docfx metadata
      # Run `docfx build` command
      - name: Build document
        run: |
          docfx build
      # Run `docfx pdf` command
      - name: Build PDF files
        run: |
          docfx pdf

      # Upload docfx output site
      - name: Upload docfx build results to artifacts
        uses: actions/upload-artifact@v4
        with:
          name: wwwroot
          path: docs/_site
          if-no-files-found: error
                
  # Publish GitHub Pages Job
  publish-pages:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      # Setup GitHub Pages
      - name: Setup Pages
        uses: actions/configure-pages@v5
        
      # Download artifacts
      - name: Download artifact
        id: download
        uses: actions/download-artifact@v4
        with:
          name: wwwroot
          path: ${{runner.temp}}/wwwroot

      # Edit `404.html` file
      - name: Edit 404.html
        run: |
          $repoName = '${{github.event.repository.name}}'
          $filePath = '${{steps.download.outputs.download-path}}/404.html'
          Get-ChildItem
          dotnet tool install dotnet-script -g
          dotnet script ".github/scripts/Rewrite404Page.csx" $repoName $filePath
          
      # Upload content to GitHub Pages
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ${{steps.download.outputs.download-path}}
          
      # Deploy to GitHub Pages
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  # Debug Job
  debug:
    needs: [build, publish-pages]
    runs-on: ubuntu-latest
    if: ${{ failure() }}
    steps:
      - run: |
          echo "Failed to build and deploy" # TODO: Add debug information
          "### Hello world! :rocket:" | Out-File -FilePath $env:GITHUB_STEP_SUMMARY -Append
          [string] $dirResult = dir 
          $dirResult | Out-File -FilePath $env:GITHUB_STEP_SUMMARY -Append
          "### Hello world! :rocket:" | Out-File -FilePath $env:GITHUB_STEP_SUMMARY -Append

